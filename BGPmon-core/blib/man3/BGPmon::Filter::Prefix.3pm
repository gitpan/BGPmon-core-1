.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BGPmon::Filter::Prefix 3pm"
.TH BGPmon::Filter::Prefix 3pm "2012-09-27" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
BGPmon::Filter::Prefix
.PP
This module is an object that keeps track of an IPv4 or IPv6 prefix.
It can compare two different prefixes and find if they're equivilent,
if one is more specific than the other, or if one is less specific than
the other.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use BGPmon::Filter::Prefix.pm
.PP
#To make an object with an IPv4 address, the first argument must be 4.
#If you want to compare it with other IPv4 prefixes and return true when
#comparing for matches with more specific prefixes, the last argument must
#be a posive number.
my \f(CW$ipv4_prefix\fR = new BGPmon::Filter::Prefix(4, \*(L"192.168.1.0/24\*(R", 1);
.PP
#To make an object with an IPv6 address, the first argument must be 6.
#If you want to compare it with other IPv6 prefixes and return true when
#comparing for matches with less specific prefixes, the last argument must
#be 0.
my \f(CW$ipv6_prefix\fR = new BGPmon::Filter::Prefix(6, \*(L"2000:0a00::/32\*(R", 0);
.PP
#To compare two prefixes, take the object and pass in the prefix you want to
#compare it to.
.PP
#The following will return true since we're passing in a more specific prefix.
my \f(CW$ret_val\fR = \f(CW$ipv4_prefix\fR\->matches(\*(L"192.168.1.128/25\*(R"); # \f(CW$ret_val\fR will be 1
.PP
#The following will return true since we're passing in a less specific prefix.
#my \f(CW$ret_val6\fR = \f(CW$ipv6_prefix\fR\->matches(\*(L"2000::/16\*(R"); # \f(CW$ret_val6\fR will be 1
.SH "EXPORT"
.IX Header "EXPORT"
new matches getVersion isV6 isV4 toString
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "new"
.IX Subsection "new"
This makes a new object.  You must pass in three arguments:
.PP
The version \- 4 or 6
.PP
The prefix \- e.g., \*(L"192.168.1.0/24\*(R"
.PP
The boolean for more specific matching \- e.g., 1 for true, 0 for false
.PP
To make an object that is for an IPv4 address of \*(L"192.168.1.0/24\*(R" that wants
to filter more specific or equivilent prefixes, make the object with the 
following:
.PP
my \f(CW$ipv4\fR = new BGPmon::Filter::Prefix.pm(4, \*(L"192.168.1.0/24\*(R", 1);
.SS "matches"
.IX Subsection "matches"
This will take in another prefix of the same type and test if the prefix is
equivilent, more specific, or less specific.
.PP
Note that if the object is made with the \*(L"more specific\*(R" set at true, then
this will return true if the given prefix is more specific or equivilent.
.PP
\&\s-1INPUT:\s0 A prefix of the same type to be matched to, e.g, \*(L"192.168.1.128/25\*(R"
\&\s-1OUTPUT:\s0 1 \- true, 0 \- false
.SS "toString"
.IX Subsection "toString"
Will return a string that can be printed in human readable form, e.g.,
.PP
192.168.1.0/24 ms
.PP
ms \- more specific
ls \- less specific
.PP
\&\s-1INPUT:\s0 (none)
\&\s-1OUTPUT:\s0 A string of characters with information about the object.
.SS "getVersion"
.IX Subsection "getVersion"
Returns the version of \s-1IP\s0 the prefix is : 4 or 6
.SS "isV6"
.IX Subsection "isV6"
Tests to see if the version specified is of type IPv6
.PP
\&\s-1INPUT:\s0 (none)
\&\s-1OUTPUT:\s0 1 \- true, 0 \- false
.SS "isV4"
.IX Subsection "isV4"
Tests to see if the version specified is of type IPv4
.PP
\&\s-1INPUT:\s0 (none)
\&\s-1OUTPUT:\s0 1 \- true, 0 \- false
.SH "AUTHOR"
.IX Header "AUTHOR"
M. Lawrence Weikum \f(CW\*(C`<mweikum@rams.colostate.edu>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature request to \f(CW\*(C`bgpmon at netsec.colostate.edu\*(C'\fR
or through the web interface at at <http://bgpmon.netsec.colostate.edu>.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation on this module with the perldoc command.
.PP
.Vb 1
\&        perldoc BGPmon::Filter::Prefix
.Ve
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2012 Colorado State University
.PP
Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the \*(L"Software\*(R"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom
the Software is furnished to do so, subject to the following
conditions:
.PP
The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.
.PP
\&\s-1THE\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R", \s-1WITHOUT\s0 \s-1WARRANTY\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0,
\&\s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0, \s-1INCLUDING\s0 \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0 \s-1THE\s0 \s-1WARRANTIES\s0
\&\s-1OF\s0 \s-1MERCHANTABILITY\s0, \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0 \s-1AND\s0
\&\s-1NONINFRINGEMENT\s0. \s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1SHALL\s0 \s-1THE\s0 \s-1AUTHORS\s0 \s-1OR\s0 \s-1COPYRIGHT\s0
\&\s-1HOLDERS\s0 \s-1BE\s0 \s-1LIABLE\s0 \s-1FOR\s0 \s-1ANY\s0 \s-1CLAIM\s0, \s-1DAMAGES\s0 \s-1OR\s0 \s-1OTHER\s0 \s-1LIABILITY\s0,
\&\s-1WHETHER\s0 \s-1IN\s0 \s-1AN\s0 \s-1ACTION\s0 \s-1OF\s0 \s-1CONTRACT\s0, \s-1TORT\s0 \s-1OR\s0 \s-1OTHERWISE\s0, \s-1ARISING\s0
\&\s-1FROM\s0, \s-1OUT\s0 \s-1OF\s0 \s-1OR\s0 \s-1IN\s0 \s-1CONNECTION\s0 \s-1WITH\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1OR\s0 \s-1THE\s0 \s-1USE\s0 \s-1OR\s0
\&\s-1OTHER\s0 \s-1DEALINGS\s0 \s-1IN\s0 \s-1THE\s0 \s-1SOFTWARE\s0.\e
.PP
File: Prefix.pm
Authors: M. Lawrence Weikum
Date: 6 September 2012
